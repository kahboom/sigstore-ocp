global:
  # -- DNS name to generate environment variables and consoleCLIDownload urls.
  # By default, in OpenShift, the value for this is
  # apps.$(oc get dns cluster -o jsonpath='{ .spec.baseDomain }')
  appsSubdomain: ""

configs:
  segment_backup_job:
    enabled: false
    namespace_create: false
    image:
      registry: registry.redhat.io
      repository: rhtas-tech-preview/segment-backup-job-rhel9
      version: "sha256:73f12e684395048bb1cd7f3f0ae4fdf97703e0012257e57152b4f7f8426644f5"
      pullPolicy: IfNotPresent
    rolebindings:
      - segment-backup-job
    name: segment-backup-job
    namespace: trusted-artifact-signer-monitoring
  clientserver:
    # -- Whether to create the OpenShift resource 'ConsoleCLIDownload' for each binary.
    # -- This can only be enabled if the OpenShift CRD is registered.
    consoleDownload: true
    # -- Whether to create the OpenShift route resource
    route: true
    name: tas-clients
    namespace_create: true
    namespace: trusted-artifact-signer-clientserver
    image:
      registry: registry.redhat.io
      repository: rhtas-tech-preview/client-server-rhel9
      version: "sha256:91caede7f666f380bd3e437444386a3818d89d50f28bb468c79294450c6bca9e"
      pullPolicy: IfNotPresent

  rekorui:
    enabled: true
    route: true
    name: rekor-ui
    namespace_create: true
    namespace: rekor-ui
    image:
      registry: registry.redhat.io
      repository: rhtas-tech-preview/rekor-search-ui-rhel9
      version: "sha256:ea4344bc762809ca46ea0708de378d8592b97194a9c1e08eb9396294276818bf"
      imagePullPolicy: Always
    subdomain: rekorui.appsSubdomain
  ctlog:
    namespace: ctlog-system
    namespace_create: true
    # -- Names for rolebindings to add clusterroles to ctlog serviceaccounts.
    # The names must match the serviceaccount names in the ctlog namespace.
    rolebindings:
      - ctlog
      - ctlog-createtree
      - trusted-artifact-signer-ctlog-createctconfig

  rekor:
    namespace_create: true
    namespace: rekor-system
    # -- names for rolebindings to add clusterroles to rekor serviceaccounts.
    # The names must match the serviceaccount names in the rekor namespace.
    rolebindings:
      - rekor-redis
      - rekor-server
      - trusted-artifact-signer-rekor-createtree
    # -- Signer holds secret that contains the private key used to sign entries and the tree head of the transparency log
    # When this section is left out, scaffold.rekor creates the secret and key.
    signer:
      secret:
        # -- Name of the secret to create with the private key data. This name must match the value in
        # scaffold.rekor.server.signer.signerFileSecretOptions.secretName.
        name: ""
        # -- Private encrypted signing key
        private_key: ""
        # -- File containing a private encrypted signing key
        private_key_file: ""
    #  -- With ClusterMonitoring enabled, a ServiceMonitor and RBAC is created. This adds a  metrics target from rekor-server
    #  in the openshift-monitoring namespace scraped by prometheus along with other cluster-monitoring targets.
    clusterMonitoring:
      enabled: true
      endpoints:
        - interval: 30s
          port: 2112-tcp
          scheme: http

  fulcio:
    namespace_create: true
    namespace: fulcio-system
    # -- Names for rolebindings to add clusterroles to fulcio serviceaccounts.
    # The names must match the serviceaccount names in the fulcio namespace.
    rolebindings:
      - fulcio-createcerts
      - fulcio-server
    server:
      #  -- Secret to create with fulcio signing backend certificate and keys.
      #  Leave this section out if a secret already exists in the fulcio namespace.
      #  The secret.name must match the value of scaffold.fulcio.server.secret and
      #  also tuf.secrets.fulcio.name. For details on certificate and key requirements,
      #  see https://github.com/sigstore/fulcio/blob/main/docs/setup.md#ca-certificate-requirements
      secret:
        name: ""
        # -- password to decrypt the signing key
        password: ""
        # -- signer public key
        public_key: ""
        # -- a PEM-encoded encrypted signing key
        private_key: ""
        # -- file containing signer public key
        public_key_file: ""
        # -- file containing a PEM-encoded encrypted signing key
        private_key_file: ""
        # -- fulcio root certificate authority (CA)
        root_cert: ""
        # -- file containing fulcio root certificate authority (CA)
        root_cert_file: ""
    #  -- With ClusterMonitoring enabled, a ServiceMonitor and RBAC is created. This adds a  metrics target from fulcio-server
    #  in the openshift-monitoring namespace scraped by prometheus along with other cluster-monitoring targets.
    clusterMonitoring:
      enabled: true
      endpoints:
        - interval: 30s
          port: 2112-tcp
          scheme: http

  trillian:
    namespace_create: true
    namespace: trillian-system
    # -- names for rolebindings to add clusterroles to trillian serviceaccounts.
    # The names must match the serviceaccount names in the trillian namespace.
    rolebindings:
      - trillian-logserver
      - trillian-logsigner
      - trillian-mysql

  tuf:
    namespace: tuf-system
    namespace_create: true
    # -- names for rolebindings to add clusterroles to tuf serviceaccounts.
    # The names must match the serviceaccount names in the tuf namespace.
    rolebindings:
      - tuf
      - tuf-secret-copy-job

  cosign_deploy:
    enabled: false
    namespace: cosign
    namespace_create: true
    # -- names for rolebindings to add clusterroles to cosign serviceaccounts.
    # The names must match the serviceaccount names in the cosign namespace.
    rolebindings:
      - cosign
    # -- Name of deployment
    name: cosign
    # -- Image containing the cosign binary as well as environment variables with the base domain injected.
    image:
      registry: registry.redhat.io
      repository: rhtas-tech-preview/cosign-rhel9
      version: sha256:151f4a1e721b644bafe47bf5bfb8844ff27b95ca098cc37f3f6cbedcda79a897
      pullPolicy: IfNotPresent

rbac:
  # -- clusterrole to be added to sigstore component serviceaccounts.
  clusterrole: system:openshift:scc:anyuid

# github.com/sigstore/helm-charts/charts
scaffold:
  ctlog:
    enabled: true
    forceNamespace: ctlog-system
    fullnameOverride: ctlog
    namespace:
      create: false
      name: ctlog-system
    server:
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/ct-server-rhel9
        version: "sha256:17eafff9bc34610d0295654df5adcf6e090bca6581cfc0eb0bb4896405953ac2"
        pullPolicy: IfNotPresent
    createctconfig:
      backoffLimit: 30
      enabled: true
      initContainerImage:
        curl:
          registry: registry.access.redhat.com
          repository: ubi9/ubi-minimal
          version: latest
          imagePullPolicy: IfNotPresent
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/createctconfig-rhel9
        version: "sha256:2c96132697025f91dfdfd6b4d2376b9d6fb3231192647e9abcbf8239e8121c0d"
        pullPolicy: IfNotPresent
    createcerts:
      fullnameOverride: ctlog-createcerts
    createtree:
      fullnameOverride: ctlog-createtree
      displayName: ctlog-tree
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/createtree-rhel9
        version: "sha256:95d1fdd16443ce06cf1f50fec952063fc57637a6ec4076a80184fb1555fa7bfc"
        pullPolicy: IfNotPresent
  fulcio:
    enabled: true
    forceNamespace: fulcio-system
    ctlog:
      enabled: false
      createctconfig:
        logPrefix: sigstorescaffolding
    namespace:
      name: fulcio-system
      create: false
    createcerts:
      enabled: false
      fullnameOverride: fulcio-createcerts
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/createcerts-rhel9
        version: "sha256:424bb53e999f96fae237c22a3d863b11deec5481fd404b15c4f806c495de256b"
        pullPolicy: IfNotPresent
    server:
      fullnameOverride: fulcio-server
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/fulcio-rhel9
        version: "sha256:12fac8e6d83056a7e5108cf92d6c622ef800ea0f2361e5b5d428a9a94811dd10"
        pullPolicy: IfNotPresent
      # If content and/or files not provided in configs.fulcio.secret
      # then this secret must exist in fulcio-system ns. See ../quickstart-with-keycloak.md
      # for how to create this secret.
      secret: fulcio-secret-rh
      ingress:
        http:
          enabled: true
          className: ""
          annotations:
            route.openshift.io/termination: "edge"
          hosts:
          - host: fulcio.appsSubdomain
            path: /

  rekor:
    enabled: true
    forceNamespace: rekor-system
    fullnameOverride: rekor
    namespace:
      name: rekor-system
      create: false
    trillian:
      enabled: false
    redis:
      fullnameOverride: rekor-redis
      args:
        - /usr/bin/run-redis
        - --bind
        - 0.0.0.0
        - --appendonly
        - "yes"
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/redis-trillian-rhel9
        version: sha256:acf920baf6ee1715c0c9d7ddf69867d331c589d3afa680048c508943078d9585
        pullPolicy: IfNotPresent
    server:
      fullnameOverride: rekor-server
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/rekor-server-rhel9
        version: "sha256:53b650ad487dce78025d1dbddc5f25116c132f4e78b7d6f8c1dd0638574f6db3"
        pullPolicy: IfNotPresent
      # when providing contents of secret with configs.rekor.signer
      # the signer sections must also be provided here
      signer: /key/private
      signerFileSecretOptions:
        secretName: rekor-private-key
        secretMountPath: /key
        secretMountSubPath: private
        privateKeySecretKey: private
      ingress:
        className: ""
        annotations:
          route.openshift.io/termination: "edge"
        hosts:
          - host: rekor.appsSubdomain
            path: /

    createtree:
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/createtree-rhel9
        version: "sha256:95d1fdd16443ce06cf1f50fec952063fc57637a6ec4076a80184fb1555fa7bfc"
        pullPolicy: IfNotPresent
    backfillredis:
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/backfill-redis-rhel9
        version: "sha256:9a8ab70162a2aac1e8335fc1d82c84cd177a95c4ab820fa00dc915c07a25eb76"
        pullPolicy: IfNotPresent
  trillian:
    enabled: true
    forceNamespace: trillian-system
    fullnameOverride: trillian
    namespace:
      create: false
      name: trillian-system
    createdb:
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/createdb-rhel9
        version: "sha256:cb9f0c8c9459c591eb1aa3192acaa75ccb7264db1e8306b9f4562025e2a04e87"
        pullPolicy: IfNotPresent
    initContainerImage:
      netcat:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/trillian-netcat-rhel9
        version: "sha256:a43e9a384050d398a73e90d51c9c0f9f1af426117fa9bf6725674de7a95f0873"
      curl:
        registry: registry.access.redhat.com
        repository: ubi9/ubi-minimal
        version: latest
        imagePullPolicy: IfNotPresent
    redis:
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/redis-trillian-rhel9
        version: sha256:acf920baf6ee1715c0c9d7ddf69867d331c589d3afa680048c508943078d9585
        pullPolicy: IfNotPresent
      args: []

    logSigner:
      name: trillian-logsigner
      fullnameOverride: trillian-logsigner
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/trillian-logsigner-rhel9
        version: "sha256:0fa31246a6a1953043ce92d1b69a02096d6a9362851fe3ca603f19d8f60c34c5"
        pullPolicy: IfNotPresent
    logServer:
      name: trillian-logserver
      fullnameOverride: trillian-logserver
      portHTTP: 8090
      portRPC: 8091
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/trillian-logserver-rhel9
        version: "sha256:0c175c41e093412450e80ba5e7be0ed47a85f166ee80003e74cbcb602ae190d1"
        pullPolicy: IfNotPresent
    mysql:
      fullnameOverride: trillian-mysql
      gcp:
        scaffoldSQLProxy:
          registry: registry.redhat.io
          repository: rhtas-tech-preview/cloudsqlproxy-rhel9
          version: sha256:f6879364d41b2adbe339c6de1dae5d17be575ea274786895448ee4277831cb7f
      image:
        registry: registry.redhat.io
        repository: rhtas-tech-preview/trillian-database-rhel9
        version: "sha256:e8e038bf1ca79f44a12b63b460f60148c9a230c2e551d13783626f03ce2573a1"
        pullPolicy: IfNotPresent
      args: []
      securityContext:
        fsGroup: 0
      livenessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
          - -u
          - $(MYSQL_USER)
          - -p$(MYSQL_PASSWORD)
      readinessProbe:
        exec:
          command:
          - mysqladmin
          - ping
          - -h
          - localhost
          - -u
          - $(MYSQL_USER)
          - -p$(MYSQL_PASSWORD)
  tuf:
    namespace:
      create: false
      name: tuf-system
    forceNamespace: tuf-system
    fullnameOverride: tuf
    secrets:
      fulcio:
        name: fulcio-secret-rh
        path: fulcio_v1.crt.pem
      rekor:
        name: rekor-public-key
        path: rekor.pub
      ctlog:
        name: ctlog-public-key
        path: ctfe.pub

    enabled: true
    ingress:
      className: ""
      annotations:
        route.openshift.io/termination: "edge"
      http:
        hosts:
          - host: tuf.appsSubdomain
            path: /
    deployment:
      registry: registry.redhat.io
      repository: rhtas-tech-preview/tuf-server-rhel9
      version: "sha256:e61ca335380ccb857cc66ecbb922ac741247956b62abba795fc29da648b91e26"

  copySecretJob:
    name: copy-secrets-job
    enabled: true
    registry: registry.redhat.io
    repository: openshift4/ose-cli
    version: latest
    imagePullPolicy: IfNotPresent
    serviceaccount: tuf-secret-copy-job
    backoffLimit: 1000

  tsa:
    enabled: false
    forceNamespace: tsa-system
    namespace:
      create: false
      name: tsa-system
    server:
      fullnameOverride: tsa-server
